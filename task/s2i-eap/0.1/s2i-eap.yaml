apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: s2i-eap
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.11.3"
    tekton.dev/tags: s2i, eap
    tekton.dev/displayName: "s2i eap"
spec:
  description: >-
    s2i-eap task fetches a Git repository and builds and
    pushes a container image using S2I and a Java EAP builder image

    This current version of the Java EAP S2I builder image supports
    OpenJDK 11, EAP CD 18, and Maven 3.5.4-5.

  results:
    - name: IMAGE_DIGEST
      description: Digest of the image just built.
  params:
    - name: PATH_CONTEXT
      description: The location of the path to run s2i from
      default: .
      type: string
    - name: TLSVERIFY
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      default: "true"
      type: string
    - name: IMAGE
      description: Location of the repo where image has to be pushed
      default: "localhost:5000/s2i-eap"
      type: string
    - name: BUILDER_IMAGE
      description: The location of the buildah builder image.
      default: quay.io/buildah/stable:v1.17.0
  workspaces:
    - name: source
      mountPath: /workspace/source
  stepTemplate:
    envFrom:
      - configMapRef:
          name: s2i-eap-configmap  # used for build env
  steps:
    - name: generate
      image: quay.io/openshift-pipeline/s2i
      workingdir: $(workspaces.source.path)
      command:
        - 's2i'
        - 'build'
        - '$(params.PATH_CONTEXT)'
        - 'registry.redhat.io/jboss-eap-7-tech-preview/eap-cd-openshift-rhel8'
        - '--assemble-user'
        - '185'
        - '--image-scripts-url'
        - 'image:///usr/local/s2i'
        - '--as-dockerfile'
        - '/gen-source/Dockerfile.gen'
        - '--environment-file'
        - '/env-params/env-file'
      volumeMounts:
        - name: gen-source
          mountPath: /gen-source
        - name: envparams
          mountPath: /env-params
    - name: build
      image: $(params.BUILDER_IMAGE)
      workingdir: /gen-source
      command: ['buildah', 'bud', '--storage-driver=vfs', '--tls-verify=$(params.TLSVERIFY)', '--layers', '-f', '/gen-source/Dockerfile.gen', '-t', '$(params.IMAGE)', '.']
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
        - name: gen-source
          mountPath: /gen-source
    - name: push
      image: $(params.BUILDER_IMAGE)
      workingDir: $(workspaces.source.path)
      command: ['buildah', 'push', '--storage-driver=vfs', '--tls-verify=$(params.TLSVERIFY)', '--digestfile=$(workspaces.source.path)/image-digest', '$(params.IMAGE)', 'docker://$(params.IMAGE)']
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
    - name: digest-to-results
      image: $(params.BUILDER_IMAGE)
      script: cat $(workspaces.source.path)/image-digest | tee /tekton/results/IMAGE_DIGEST
  volumes:
    - name: varlibcontainers
      emptyDir: {}
    - name: gen-source
      emptyDir: {}
    - name: envparams
      configMap:
        name: s2i-eap-configmap
